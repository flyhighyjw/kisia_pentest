<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <style>
        body { background-color: #222E4E; color: #FFFFFF; font-family: 'Arial', sans-serif; }
        .container { max-width: 800px; margin: 50px auto; padding: 20px; background-color: #0E162E; border-radius: 10px; }
        h1 { color: #1F5DB1; text-align: center; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 10px; text-align: left; border-bottom: 1px solid #1F5DB1; }
        th { background-color: #1F5DB1; color: #FFFFFF; }
        .checkout-btn { background-color: #1F5DB1; color: #FFFFFF; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; }
        .checkout-btn:hover { background-color: #0E4B92; }
        .action-btn { padding: 5px 10px; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; }
        .edit-btn { background-color: silver; color: black; }
        .remove-btn { background-color: #CD7F32; color: black; }
        .action-btn:hover { background-color: #555; }
        tr:nth-child(even) { background-color: #2e3b70; }
        tr:nth-child(odd) { background-color: #1a2749; }
        tr:hover { background-color: #3c4b89; }
    </style>
</head>
<body>
    <div class='container'>
        <h1>Your Cart</h1>
        <button class='checkout-btn' onclick='validateForm()'>Check out</button> </br></br>
        <form id="remove_form" action="/1internals/item/remove_from_cart.php" method="POST">
            <input type="hidden" id="remove_cno" name="remove_cno" value="">
        </form>
        <form id="edit_form" action="/1internals/item/edit_in_cart.php" method="POST">
            <input type="hidden" id="edit_dno" name="edit_dno" value="">
            <input type="hidden" id="edit_amount" name="edit_amount" value="">
        </form>
        <form id="checkout_form" action="/1internals/item/check_out.php" method="POST">
            <!-- Hidden inputs will be appended here by JavaScript -->
        </form>

        <table border='1' cellpadding='5' cellspacing='0' style='margin: 0 auto;'>
            <tr><th>Item Name</th><th>Amount</th><th>Price</th><th>Action</th></tr>
            <?php
            require_once $_SERVER['DOCUMENT_ROOT'].'/3severside/database.php';
            session_start(); 

            // Check if the user is not signed in, redirect to sign-in page
            if (!$_SESSION['hasSignedIn']) {
                header("Location: /?target=signin");
                exit;
            }

            // Fetch uno from Users table using uid
            $userid = $_SESSION['userid'];
            $userQuery = "SELECT uno FROM Users WHERE uid = '$userid'";
            $userResult = execute_query($userQuery);
            $userRow = $userResult->fetch_assoc();
            $uno = $userRow['uno'];

            // Fetch cart contents from the database using uno
            $cartQuery = "SELECT * FROM Carts WHERE uno = '$uno'";
            $cartResult = execute_query($cartQuery);

            // Check if there are items in the cart
            if ($cartResult->num_rows > 0) {
                while($cartRow = $cartResult->fetch_assoc()) {
                    // Fetch item details from Descriptions and Items tables
                    $dno = $cartRow['dno'];
                    $itemQuery = "SELECT C.camo, D.dtitle, I.iprice
                                FROM Carts AS C
                                INNER JOIN Descriptions AS D ON C.dno = D.dno
                                INNER JOIN Items AS I ON D.ino = I.ino
                                WHERE C.uno = $uno AND C.dno = $dno"; 
                    $itemResult = execute_query($itemQuery);
                    $itemRow = $itemResult->fetch_assoc();

                    $itemName = $itemRow['dtitle'];
                    $itemPrice = $itemRow['iprice'];
                    $itemAmount = $cartRow['camo'];
                    ?>
                    <tr>
                        <td>
                            <?php echo $itemName; ?>
                        </td>
                        <td>
                            <input type='text' value=' <?php echo $itemAmount; ?>' id='amount_<?php echo $dno;?>' name='amount_<?php echo $dno?>'>
                        </td>
                        <td>
                            <?php echo $itemPrice; ?>
                        </td>
                        <td>
                            <button type='button' class='action-btn edit-btn'   onclick='editItem(<?php echo $dno; ?>)'>Edit</button>
                            <button type='button' class='action-btn remove-btn' onclick='removeItem(<?php echo $dno . "," . $cartRow['cno']; ?> )'>Remove</button>
                        </td>
                    </tr>
                    <?php
                }
            } else {
                // No items in the cart
                echo "<tr><td colspan='4'>Your cart is empty.</td></tr>";
            }
            ?>
        </table>
    </div>
    <script>
        function validateForm() {
            var inputs = document.querySelectorAll('input[type="text"]');
            var isValid = true;

            inputs.forEach(function(input) {
                if (!input.value || isNaN(input.value)) {
                    isValid = false;
                }
            });

            if (!isValid) {
                alert("Amount must be numeric and cannot be empty.");
                return false;
            }

            // Clear previous hidden inputs
            var checkoutForm = document.getElementById('checkout_form');
            checkoutForm.innerHTML = '';

            // Append hidden inputs for each item
            inputs.forEach(function(input) {
                var itemId = input.name.split('_')[1];
                var amount = input.value;

                var hiddenDno = document.createElement('input');
                hiddenDno.type = 'hidden';
                hiddenDno.name = 'dno_' + itemId;
                hiddenDno.value = itemId;
                checkoutForm.appendChild(hiddenDno);

                var hiddenAmount = document.createElement('input');
                hiddenAmount.type = 'hidden';
                hiddenAmount.name = 'amount_' + itemId;
                hiddenAmount.value = amount;
                checkoutForm.appendChild(hiddenAmount);
            });

            // Submit the checkout form
            checkoutForm.submit();
        }

        function editItem(itemId) {
            var input = document.getElementById('amount_' + itemId);
            if (!input.value || isNaN(input.value)) {
                alert("Amount must be numeric and cannot be empty.");
                return false;
            }

            // Set the values of the hidden input fields
            document.getElementById('edit_dno').value = itemId;
            document.getElementById('edit_amount').value = input.value;

            // Submit the form
            document.getElementById('edit_form').submit();
        }

        function removeItem(itemId, cno) {
            // Set the value of the hidden input field
            document.getElementById('remove_cno').value = cno;

            // Submit the form
            document.getElementById('remove_form').submit();
        }
    </script>
</body>
</html>
